// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.cli.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/cli/v1;cli";
option java_package = "io.strmprivacy.api.cli.v1";
option java_multiple_files = true;

service CliService {
  rpc GetRelease(GetReleaseRequest) returns (GetReleaseResponse);
}

message GetReleaseRequest {
  // The CLI version, get the latest version if unspecified.
  string version = 1 [(validate.rules).string = {
    ignore_empty: true,
    pattern:"^v(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/gm"
  }];
}

message GetReleaseResponse {
  CliRelease release = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message CliRelease {
  // The version string for this CLI release.
  string version = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  google.protobuf.Timestamp release_time = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The absolute URL to the release page in GitHub.
  string source_uri = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The release notes in Markdown format.
  string release_notes = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}
