// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.data_connectors.v1;

import "google/api/field_behavior.proto";
import "strmprivacy/api/entities/v1/entities_v1.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/data_connectors/v1;data_connectors";
option java_package = "io.strmprivacy.api.data_connectors.v1";
option java_multiple_files = true;

service DataConnectorsService {
  rpc ListDataConnectors (ListDataConnectorsRequest) returns (ListDataConnectorsResponse);
  rpc GetDataConnector (GetDataConnectorRequest) returns (GetDataConnectorResponse);
  rpc DeleteDataConnector (DeleteDataConnectorRequest) returns (DeleteDataConnectorResponse);
  rpc CreateDataConnector (CreateDataConnectorRequest) returns (CreateDataConnectorResponse);
}

message ListDataConnectorsRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  bool recursive = 2;
  bool include_credentials = 3;
  string project_id = 4 [(validate.rules).string = {uuid: true}];
}

message ListDataConnectorsResponse {
  repeated entities.v1.DataConnector data_connectors = 1;
}

message DeleteDataConnectorRequest {
  entities.v1.DataConnectorRef ref = 1 [(validate.rules).message.required = true];
  // (-- api-linter: core::0135::request-unknown-fields=disabled
  //     aip.dev/not-precedent: We really need this field. --)
  bool recursive = 2;
}

message DeleteDataConnectorResponse {
}

message CreateDataConnectorRequest {
  entities.v1.DataConnector data_connector = 1 [(validate.rules).message.required = true];
}

message CreateDataConnectorResponse {
  entities.v1.DataConnector data_connector = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetDataConnectorRequest {
  entities.v1.DataConnectorRef ref = 1 [(validate.rules).message.required = true];
  bool recursive = 2;
  bool include_credentials = 3;
}

message GetDataConnectorResponse {
  entities.v1.DataConnector data_connector = 1;
}
