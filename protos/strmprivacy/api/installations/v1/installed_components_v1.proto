syntax = "proto3";

package strmprivacy.api.installations.v1;

import "strmprivacy/api/installations/v1/entities_v1.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/installations/v1;installations";
option java_package = "io.strmprivacy.api.installations.v1";
option java_multiple_files = true;

service InstalledComponentsService {
  // Authentication goes through the installations realm; a strm-installation-id is required in the metadata.
  rpc UpdateInstalledComponentState(UpdateInstalledComponentStateRequest) returns (UpdateInstalledComponentStateResponse);

  // Authentication goes through the users realm; a strm-external-user-id is required in the metadata.
  rpc GetInstalledComponent(GetInstalledComponentRequest) returns (GetInstalledComponentResponse);

  // Authentication goes through the users realm; a strm-external-user-id is required in the metadata.
  rpc ListInstalledComponents(ListInstalledComponentsRequest) returns (ListInstalledComponentsResponse);

  // Authentication goes through the users realm; a strm-external-user-id is required in the metadata. Similar to list,
  // but only lists the state of the instances in the last x minutes
  rpc ListInstalledComponentsCurrentStates(ListInstalledComponentsCurrentStatesRequest) returns (ListInstalledComponentsCurrentStatesResponse);
}

// (-- api-linter: core::0134::request-mask-required=disabled
//     aip.dev/not-precedent: This RPC only updates one field. --)
message UpdateInstalledComponentStateRequest {
  InstalledComponentType component_type = 1 [(validate.rules).enum = {not_in: [0]}];
  // A string that represents the instance. The hostname is used for this, which in Kubernetes defaults to the pod name.
  string instance_id = 2 [(validate.rules).string = {min_len: 4}];
  InstalledComponentState installed_component_state = 3 [(validate.rules).message.required = true];
  string installation_id = 4 [(validate.rules).string.uuid = true];
}

message UpdateInstalledComponentStateResponse {
}

message GetInstalledComponentRequest {
  string installation_id = 1 [(validate.rules).string.uuid = true];
  InstalledComponentType installed_component_type = 2 [(validate.rules).enum = {not_in: [0]}];
}

message GetInstalledComponentResponse {
  InstalledComponent installed_component = 1;
}

message ListInstalledComponentsRequest {
  string installation_id = 1 [(validate.rules).string.uuid = true];
}

message ListInstalledComponentsResponse {
  repeated InstalledComponent installed_components = 1;
}

message ListInstalledComponentsCurrentStatesRequest {
  string installation_id = 1 [(validate.rules).string.uuid = true];
}

message ListInstalledComponentsCurrentStatesResponse {
  // (-- api-linter: core::0132::response-unknown-fields=disabled
  //     aip.dev/not-precedent: field name gets too clunky --)
  repeated InstalledComponentsCurrentState installed_components = 1;
}
