// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.batch_jobs.v1;

import "google/api/field_behavior.proto";
import "strmprivacy/api/entities/v1/entities_v1.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/batch_jobs/v1;batch_jobs";
option java_package = "io.strmprivacy.api.batch_jobs.v1";
option java_multiple_files = true;

service BatchJobsService {
  rpc GetBatchJob(GetBatchJobRequest) returns (GetBatchJobResponse);
  rpc ListBatchJobs(ListBatchJobsRequest) returns (ListBatchJobsResponse);
  rpc CreateBatchJob(CreateBatchJobRequest) returns (CreateBatchJobResponse);
  rpc DeleteBatchJob(DeleteBatchJobRequest) returns (DeleteBatchJobResponse);
  rpc UpdateBatchJobState(UpdateBatchJobStateRequest) returns (UpdateBatchJobStateResponse);
}

message GetBatchJobRequest {
  entities.v1.BatchJobRef ref = 1 [(validate.rules).message.required = true];
}

message GetBatchJobResponse {
  entities.v1.BatchJob batch_job = 1 [deprecated = true];
  entities.v1.BatchJobWrapper job = 2 [(google.api.field_behavior) = REQUIRED];
}

message ListBatchJobsRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  string project_id = 2 [(validate.rules).string.uuid = true];
}

// (-- api-linter: core::0132::response-unknown-fields=disabled
//     aip.dev/not-precedent: we prefer this approach over creating a new service --)
message ListBatchJobsResponse {
  repeated entities.v1.BatchJob batch_jobs = 1 [deprecated = true];
  repeated entities.v1.BatchJobWrapper jobs = 2 [(google.api.field_behavior) = REQUIRED];
}

message CreateBatchJobRequest {
  entities.v1.BatchJob batch_job = 1 [deprecated = true];
  // Todo: use [(validate.rules).message.required = true] instead once all apps use the wrapper
  // (-- api-linter: core::0133::request-required-fields=disabled
  //     aip.dev/not-precedent: We really need this field to be required because
  // it used to work up til now, and api-linter is complaining just for the fun of it. --)
  entities.v1.BatchJobWrapper job = 2 [(google.api.field_behavior) = REQUIRED];
}

message CreateBatchJobResponse {
  entities.v1.BatchJob batch_job = 1 [(google.api.field_behavior) = REQUIRED, deprecated = true];
  entities.v1.BatchJobWrapper job = 2 [(google.api.field_behavior) = REQUIRED];
}

message DeleteBatchJobRequest {
  entities.v1.BatchJobRef ref = 1 [(validate.rules).message.required = true];
}

message DeleteBatchJobResponse {
}

// (-- api-linter: core::0134::request-mask-required=disabled
//     aip.dev/not-precedent: This RPC only updates one field. --)
message UpdateBatchJobStateRequest {
  entities.v1.BatchJobRef ref = 1 [(validate.rules).message.required = true];
  entities.v1.BatchJobState batch_job_state = 2 [(validate.rules).message.required = true];
}

message UpdateBatchJobStateResponse {
}
