// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.batch_exporters.v1;

import "strmprivacy/api/entities/v1/entities_v1.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/batch_exporters/v1;batch_exporters";
option java_package = "io.strmprivacy.api.batch_exporters.v1";
option java_multiple_files = true;

service BatchExportersService {
  rpc ListBatchExporters (ListBatchExportersRequest) returns (ListBatchExportersResponse);
  rpc GetBatchExporter (GetBatchExporterRequest) returns (GetBatchExporterResponse);
  rpc DeleteBatchExporter (DeleteBatchExporterRequest) returns (DeleteBatchExporterResponse);
  rpc CreateBatchExporter (CreateBatchExporterRequest) returns (CreateBatchExporterResponse);
}

message ListBatchExportersRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  string project_id = 2 [(validate.rules).string = {uuid:true}];
}

message ListBatchExportersResponse {
  repeated strmprivacy.api.entities.v1.BatchExporter batch_exporters = 1;
}

message DeleteBatchExporterRequest {
  entities.v1.BatchExporterRef ref = 1 [(validate.rules).message.required = true];
}

message DeleteBatchExporterResponse {
}

message CreateBatchExporterRequest {
  strmprivacy.api.entities.v1.BatchExporter batch_exporter = 1 [(validate.rules).message.required = true];
}

message CreateBatchExporterResponse {
  strmprivacy.api.entities.v1.BatchExporter batch_exporter = 1;
}

message GetBatchExporterRequest {
  entities.v1.BatchExporterRef ref = 1 [(validate.rules).message.required = true];
}

message GetBatchExporterResponse {
  strmprivacy.api.entities.v1.BatchExporter batch_exporter = 1;
}
