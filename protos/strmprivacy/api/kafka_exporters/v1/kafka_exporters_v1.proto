// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.kafka_exporters.v1;

import "strmprivacy/api/entities/v1/entities_v1.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v3/api/kafka_exporters/v1;kafka_exporters";
option java_package = "io.strmprivacy.api.kafka_exporters.v1";
option java_multiple_files = true;

service KafkaExportersService {
  rpc ListKafkaExporters (ListKafkaExportersRequest) returns (ListKafkaExportersResponse);
  rpc GetKafkaExporter (GetKafkaExporterRequest) returns (GetKafkaExporterResponse);
  rpc DeleteKafkaExporter (DeleteKafkaExporterRequest) returns (DeleteKafkaExporterResponse);
  rpc CreateKafkaExporter (CreateKafkaExporterRequest) returns (CreateKafkaExporterResponse);
}

message ListKafkaExportersRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  string project_id = 2 [(validate.rules).string.uuid = true];
}

message ListKafkaExportersResponse {
  repeated strmprivacy.api.entities.v1.KafkaExporter kafka_exporters = 1;
}

message DeleteKafkaExporterRequest {
  entities.v1.KafkaExporterRef ref = 1 [(validate.rules).message.required = true];
  // (-- api-linter: core::0135::request-unknown-fields=disabled
  //     aip.dev/not-precedent: We really need this field. --)
  bool recursive = 2;
}

message DeleteKafkaExporterResponse {
}

message CreateKafkaExporterRequest {
  strmprivacy.api.entities.v1.KafkaExporter kafka_exporter = 1 [(validate.rules).message.required = true];
}

message CreateKafkaExporterResponse {
  strmprivacy.api.entities.v1.KafkaExporter kafka_exporter = 1;
}

message GetKafkaExporterRequest {
  entities.v1.KafkaExporterRef ref = 1 [(validate.rules).message.required = true];
}

message GetKafkaExporterResponse {
  strmprivacy.api.entities.v1.KafkaExporter kafka_exporter = 1;
}
