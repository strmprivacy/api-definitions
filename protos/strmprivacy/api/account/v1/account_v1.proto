// (-- api-linter: core::0133::request-id-field=disabled
//     aip.dev/not-precedent: We need to do this because we typically use entities that contain
//     references inside them, and not an entity id directly in the request. --)
syntax = "proto3";

package strmprivacy.api.account.v1;

import "strmprivacy/api/entities/v1/entities_v1.proto";
import "google/api/field_behavior.proto";
import "validate/validate.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v2/api/account/v1;account";
option java_package = "io.strmprivacy.api.account.v1";
option java_multiple_files = true;

service AccountService {
  // Retrieve information regarding quotas, and the user context
  rpc GetAccountDetails (GetAccountDetailsRequest) returns (GetAccountDetailsResponse);
  rpc GetLegacyBillingId (GetLegacyBillingIdRequest) returns (GetLegacyBillingIdResponse);
  // Claim and create a handle for your user
  rpc CreateAccountHandle (CreateAccountHandleRequest) returns (CreateAccountHandleResponse);
  // Start a checkout to subscribe to a specific subscription
  rpc InitializeCheckout (InitializeCheckoutRequest) returns (InitializeCheckoutResponse);
  // Get the Stripe Checkout Status for an ongoing checkout
  rpc GetCheckoutStatus (GetCheckoutStatusRequest) returns (GetCheckoutStatusResponse);

  rpc InitializeCustomerPortal (InitializeCustomerPortalRequest) returns (InitializeCustomerPortalResponse);

  // (-- api-linter: core::0134::synonyms=disabled
  //     aip.dev/not-precedent: We're not updating a Checkout here. --)
  rpc SetCheckoutCancelled (SetCheckoutCancelledRequest) returns (SetCheckoutCancelledResponse);
  rpc UpdateOnboarding (UpdateOnboardingRequest) returns (UpdateOnboardingResponse);
}

message GetAccountDetailsRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
}

message GetAccountDetailsResponse {
  string billing_id = 1 [deprecated = true];
  int32 max_input_streams = 2 [(google.api.field_behavior) = REQUIRED];
  string handle = 3 [(google.api.field_behavior) = OPTIONAL];
  string subscription = 4 [(google.api.field_behavior) = REQUIRED];
  string organization = 5 [(google.api.field_behavior) = REQUIRED];
  string organization_id = 6 [(google.api.field_behavior) = REQUIRED];
  string internal_user_id = 7 [(google.api.field_behavior) = REQUIRED];
  bool is_onboarding_done = 8 [(google.api.field_behavior) = REQUIRED];
  repeated strmprivacy.api.entities.v1.UserRole user_roles = 9 [(google.api.field_behavior) = OPTIONAL];
}

message GetLegacyBillingIdRequest {
  option deprecated = true;
}

message GetLegacyBillingIdResponse {
  option deprecated = true;
  string billing_id = 1 [(google.api.field_behavior) = REQUIRED];
}

// (-- api-linter: core::0133::request-resource-field=disabled
//     aip.dev/not-precedent: Handle is just a string. --)
message CreateAccountHandleRequest {
  string billing_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  string handle = 2 [
    (validate.rules).string = {
      min_len: 4,
      max_len: 100,
      not_contains: "strm",
      pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]+[a-zA-Z0-9]$",
    }];
}

message CreateAccountHandleResponse {
  string handle = 1 [(google.api.field_behavior) = REQUIRED];
}

message InitializeCheckoutRequest {
  // The STRM Privacy subscription name
  string plan_id = 1 [(validate.rules).string = {
    min_len: 1,
    in: ["ENTERPRISE", "BUSINESS", "SELF_HOSTED", "FREE"]
  }];
  // The external user id of the logged in user. Deprecated in favor of the user id in the Bearer token, which overrides any provided value here
  string user_id = 2 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
}

message InitializeCheckoutResponse {
  string checkout_uri = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetCheckoutStatusRequest {
  // The external user id of the logged in user. Deprecated in favor of the user id in the Bearer token, which overrides any provided value here
  string user_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  // The Stripe checkout session id
  string checkout_session_id = 2 [(validate.rules).string = {min_len: 1, ignore_empty: true}];
}

message GetCheckoutStatusResponse {
  string status = 1 [(google.api.field_behavior) = REQUIRED];
}

message SetCheckoutCancelledRequest {
  // The external user id of the logged in user. Deprecated in favor of the user id in the Bearer token, which overrides any provided value here
  string user_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
  string checkout_session_id = 2 [(validate.rules).string = {min_len: 1, ignore_empty: true}];
}

message SetCheckoutCancelledResponse {
}

message InitializeCustomerPortalRequest {
  // The external user id of the logged in user. Deprecated in favor of the user id in the Bearer token, which overrides any provided value here
  string user_id = 1 [deprecated = true, (validate.rules).string = {len: 0, ignore_empty: true}];
}

message InitializeCustomerPortalResponse {
  string customer_portal_uri = 1 [(google.api.field_behavior) = REQUIRED];
}

// (-- api-linter: core::0134::request-mask-required=disabled
//     aip.dev/not-precedent: we prefer this way over creating a new entity--)
message UpdateOnboardingRequest {
  bool is_onboarding_done = 1;
}

message UpdateOnboardingResponse {}
