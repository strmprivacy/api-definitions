syntax = "proto3";

package strmprivacy.api.entities.v1alpha;

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "strmprivacy/api/entities/v1/entities_v1.proto";

option go_package = "github.com/strmprivacy/api-definitions-go/v2/api/entities/v1alpha;entities";
option java_package = "io.strmprivacy.api.entities.v1alpha";
option java_multiple_files = true;

message ProjectPlan {
  string project_id = 1;
  // If title is empty, the project name from the project message can be used.
  string title = 2 [(validate.rules).string = {ignore_empty: true, min_len: 1, max_len: 300}];
  string description = 3 [(validate.rules).string = {ignore_empty: true, max_len: 5000}];
  repeated ItemGroup item_groups = 4;
  repeated entities.v1.User users = 5;
  // is this instance actually a template, i.e. without filled in values.
  bool is_template = 6;
  // the id of the project plan, never null
  string id = 7 [(validate.rules).string.uuid = true];
}

message ItemGroup {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 100}];
  string description = 2 [(validate.rules).string = {ignore_empty: true, max_len: 5000}];
  oneof items {
    option (validate.required) = true;

    TodoItems todo_items = 4;
    DataContractItems data_contract_items = 5;
    InfoAssetItems info_asset_items = 6;
    DocumentItems document_items = 7;
    PipelineItems pipeline_items = 8;
  }
}

message ItemProperties {
  string id = 1 [(validate.rules).string.uuid = true];
  google.protobuf.Timestamp creation_time = 2;
  google.protobuf.Timestamp due_time = 3;
  google.protobuf.Timestamp completion_time = 4;
  // The user that created this item, retrieved from the JWT token.
  entities.v1.User creator = 5;
  // The user that is assigned to this item.
  entities.v1.User assignee = 6;
}


message TodoItems {
  repeated TodoItem items = 2;

  message TodoItem {
    ItemProperties item_properties = 1;
    // If the completion date is 0, then the todo is not done yet.
    string description = 2 [(validate.rules).string = {max_len: 5000}];
  }
}

message DataContractItems {
  repeated DataContractItem items = 1;

  message DataContractItem {
    ItemProperties item_properties = 1;
    // Data Contract details can be retrieved through the Data Contract API.
    entities.v1.DataContractRef ref = 2 [(validate.rules).message.required = true];
  }
}

message InfoAssetItems {
  repeated InfoAssetItem items = 1;

  message InfoAssetItem {
    ItemProperties item_properties = 1;
    string name = 2 [(validate.rules).string = {max_len: 300}];
    State state = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    Classification classification = 4;
    InfoAsset info_asset = 5;

    enum State {
      STATE_UNSPECIFIED = 0;
      DRAFT = 1;
      IN_REVIEW = 2;
      APPROVED = 3;
    }

    // TODO is the name correct? Could also be SensitivityClassification or RiskClassification.
    // TODO is points a part of the classification or a separate field?
    message Classification {
      string name = 1 [(validate.rules).string = {max_len: 300}];
      string color_css = 2;
      // The sensitivity points of the information asset (higher is more sensitive)
      int32 points = 4;
    }
  }
}

message DocumentItems {
  repeated DocumentItem items = 1;

  message DocumentItem {
    ItemProperties item_properties = 1;
    // Filename should be unique within the project.
    string filename = 2;
    // If the URI is set, then the document originates from an external source.
    string uri = 3;
  }
}

message PipelineItems {
  repeated PipelineItem items = 2;

  message PipelineItem {
    ItemProperties item_properties = 1;
    oneof pipeline {
      option (validate.required) = true;
      entities.v1.StreamRef stream = 2;
      entities.v1.BatchJobRef batch_job = 3;
    }
  }
}

message InfoAsset {
  string template = 1;
  string name = 2;
  bool embargo = 3;
  repeated BusinessImpactRating business_impacts = 4;

  repeated string security_levels = 5;
  string security_level = 6;

  repeated Section sections = 7;

  // is this instance actually a template, i.e. without filled in values.
  bool is_template = 8;


  message Section {
    // Business consequences for instance
    string name = 1;
    repeated SubSection sub_sections = 2;
  }
  message SubSection {
    // 'Impact on core business' for instance
    string name = 1;
    string description = 2;
    string explanation = 3;
    repeated Check checks = 4;
  }
  message Check {
    string name = 1;
    string detail_info = 2;
    bool  checked = 3;
  }
  message BusinessImpactRating {
    string label = 1;
    BusinessImpactCategory category = 2;
  }
  message BusinessImpactCategory {
    string name = 1;
    string description = 2;
    float value = 3;
  }

}

