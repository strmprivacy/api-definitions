syntax = "proto3";

package io.streammachine.internal_api.schemas.v1;
option go_package = "streammachine.io/api/internal_api/schemas/v1;schemas";

import "io/streammachine/external_api/entities/v1/entities_v1.proto";

// TODO discuss!
//option java_multiple_files = true;

service InternalSchemasService {
  rpc GetSchemaByConfluentId (GetSchemaByConfluentIdRequest) returns (GetSchemaByConfluentIdResponse);
  rpc GetCombinedByEventContractRef (GetCombinedByEventContractRefRequest) returns (GetCombinedByEventContractRefResponse);
  rpc DeleteSchema (DeleteSchemaRequest) returns (DeleteSchemaResponse);
}

message GetSchemaByConfluentIdRequest {
  int32 confluent_id = 1;
}

message GetSchemaByConfluentIdResponse {
  string definition = 1;
}

message GetCombinedByEventContractRefRequest {
  string schema_name = 1;
}

message GetCombinedByEventContractRefResponse {
  io.streammachine.external_api.entities.v1.Schema schema = 1;
  io.streammachine.external_api.entities.v1.EventContract event_contract = 2;
  int32 confluent_id = 3;
}

message DeleteSchemaRequest {
  io.streammachine.external_api.entities.v1.SchemaRef ref = 1;
}

message DeleteSchemaResponse {
}
