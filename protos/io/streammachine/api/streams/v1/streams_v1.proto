syntax = "proto3";

package io.streammachine.api.streams.v1;

import "google/api/field_behavior.proto";
import "io/streammachine/api/entities/v1/entities_v1.proto";

option go_package = "streammachine.io/api/streams/v1;streams";
option java_multiple_files = true;

service StreamsService {
  rpc ListStreams (ListStreamsRequest) returns (ListStreamsResponse);
  rpc GetStream (GetStreamRequest) returns (GetStreamResponse);
  rpc DeleteStream (DeleteStreamRequest) returns (DeleteStreamResponse);
  rpc CreateStream (CreateStreamRequest) returns (CreateStreamResponse);
}

message ListStreamsRequest {
  bool recursive = 1;
}

message ListStreamsResponse {
  repeated io.streammachine.api.entities.v1.StreamTree streams = 1;
}

message DeleteStreamRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // (-- api-linter: core::0135::request-unknown-fields=disabled
  //     aip.dev/not-precedent: We really need this field. --)
  bool recursive = 2 [(google.api.field_behavior) = REQUIRED];
}

message DeleteStreamResponse {
}

message CreateStreamRequest {
  /* not all fields are used, and if you fill them in, they'll be overwritten
   * by the api gateway (like status, the limits etc...) */
  io.streammachine.api.entities.v1.Stream stream = 1 [(google.api.field_behavior) = REQUIRED];
}

message CreateStreamResponse {
  io.streammachine.api.entities.v1.Stream stream = 1;
}

message GetStreamRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  bool recursive = 2 [(google.api.field_behavior) = REQUIRED];
}

message GetStreamResponse {
  io.streammachine.api.entities.v1.StreamTree stream_tree = 1;
}
