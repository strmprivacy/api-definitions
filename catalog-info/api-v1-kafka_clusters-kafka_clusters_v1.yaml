apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: api-KafkaClustersService-v1
  namespace: core
  title: "KafkaClustersService v1"
  labels:
    api-type: "api"
    api-version: "v1"
    api-component: "kafka_clusters"
spec:
  type: grpc
  lifecycle: production
  owner: core-team
  subcomponentOf: core/api-definitions
  definition: |
    syntax = "proto3";
    
    package strmprivacy.api.kafka_clusters.v1;
    
    import "google/api/field_behavior.proto";
    import "strmprivacy/api/entities/v1/entities_v1.proto";
    
    option go_package = "github.com/strmprivacy/api-definitions-go/v2/api/kafka_clusters/v1;kafka_clusters";
    option java_package = "io.strmprivacy.api.kafka_clusters.v1";
    option java_multiple_files = true;
    
    service KafkaClustersService {
      rpc ListKafkaClusters (ListKafkaClustersRequest) returns (ListKafkaClustersResponse);
      rpc GetKafkaCluster (GetKafkaClusterRequest) returns (GetKafkaClusterResponse);
      rpc DeleteKafkaCluster (DeleteKafkaClusterRequest) returns (DeleteKafkaClusterResponse);
      rpc CreateKafkaCluster (CreateKafkaClusterRequest) returns (CreateKafkaClusterResponse);
    }
    
    message ListKafkaClustersRequest {
      string billing_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    }
    
    message ListKafkaClustersResponse {
      repeated strmprivacy.api.entities.v1.KafkaCluster kafka_clusters = 1;
    }
    
    message DeleteKafkaClusterRequest {
      string billing_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
      entities.v1.KafkaClusterRef ref = 2 [(google.api.field_behavior) = REQUIRED];
    }
    
    message DeleteKafkaClusterResponse {
    }
    
    message CreateKafkaClusterRequest {
      strmprivacy.api.entities.v1.KafkaCluster kafka_cluster = 1;
    }
    
    message CreateKafkaClusterResponse {
      strmprivacy.api.entities.v1.KafkaCluster kafka_cluster = 1;
    }
    
    message GetKafkaClusterRequest {
      string billing_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
      entities.v1.KafkaClusterRef ref = 2 [(google.api.field_behavior) = REQUIRED];
    }
    
    message GetKafkaClusterResponse {
      strmprivacy.api.entities.v1.KafkaCluster kafka_cluster = 1;
    }
