apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: internal_api-InternalSchemasService-v1
  title: "InternalSchemasService v1"
  labels:
    api-type: "internal_api"
    api-version: "v1"
    api-component: "schemas"
spec:
  type: grpc
  lifecycle: production
  owner: team-core
  system: api-definitions
  definition: |
    syntax = "proto3";
    
    package strmprivacy.internal_api.schemas.v1;
    
    import "strmprivacy/api/entities/v1/entities_v1.proto";
    
    option go_package = "github.com/strmprivacy/api-definitions-go/v2/internal_api/schemas/v1;schemas";
    option java_package = "io.strmprivacy.internal_api.schemas.v1";
    option java_multiple_files = true;
    
    service InternalSchemasService {
      option deprecated = true;
      rpc GetSchemaDefinition (GetSchemaDefinitionRequest) returns (GetSchemaDefinitionResponse);
    }
    
    // Use strmprivacy.api.schemas.v1.SchemasService
    message GetSchemaDefinitionRequest {
      option deprecated = true;
      int32 confluent_id = 1;
      strmprivacy.api.entities.v1.KafkaClusterRef cluster_ref = 2;
    }
    
    // Use strmprivacy.api.schemas.v1.SchemasService
    message GetSchemaDefinitionResponse {
      option deprecated = true;
      string definition = 1;
    }
